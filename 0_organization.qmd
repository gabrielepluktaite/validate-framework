# How Requirements are Organized

Requirements are structured to provide a clear view of their definitions and parameters. Below is an outline detailing how these are organized, articulated through an example of a standard requirement.

## Requirement YZ-N-AAA Example

Each requirement has a unique ID, constructed as follows:

**YZ**: Sub-chapter numbers reflecting the requirement's area

**N**: Sequential number within the sub-chapter

**AAA**: The first three letters of the chapter topic

------------------------------------------------------------------------

**Description:** *X* of ***\[example parameter\]*** for measuring model uncertainty are implemented to provide a confidence interval for predictions in the app.

### Parameters

| **Parameter**         | **Values**                                                                                       |
|------------------|------------------------------------------------------|
| **Example Parameter** | Parameters listed in brackets are adjustable by the WP 1 team during the project period.|

### Phases

Each requirement is mapped to a specific project phase:

<div style="background-color:#f9e79f; padding:10px; border-radius:5px;">

**Development**: Focuses on developing the tool's prototype until month 18.

</div>

<div style="background-color:#f9e79f; padding:10px; border-radius:5px;">

**Testing**: The prototype undergoes testing until month 18.

</div>

<div style="background-color:#f9e79f; padding:10px; border-radius:5px;">

**Validation**: Begins in month 18, marking the start of validating the developed and tested prototype.

</div>

### Owner

Each requirement is assigned an Owner, usually a WP lead relevant to existing tasks. The Owner is responsible for task delegation and execution to meet the requirement.

### Requirement Categorization

Based on the parameterized statements, requirements are classified into three sub-categories:

<div style="background-color:#abebc6; padding:10px; border-radius:5px;">

**Fulfilled**: Requirement is complete and if possible, the associated artefact is attached to the framework as proof.

</div>

<div style="background-color: #e8daef; padding:10px; border-radius:5px;">

**In Progress**: The requirement is partially or in the process of being completed. Any relevant artefacts are attached.

</div>

<div style="background-color:#e6f7ff; padding:10px; border-radius:5px;">

**To Be Done**: The requirement has not been started, with an explanation attached as to why this is the case.

</div>
